import{_ as t,c as a,o as r,R as e}from"./chunks/framework.c3af281d.js";const m=JSON.parse('{"title":"Shopizer product REST api documentation","description":"","frontmatter":{"title":"Shopizer product REST api documentation"},"headers":[],"relativePath":"api/products/index.md"}'),o={name:"api/products/index.md"},i=e('<h1 id="product-api-reference" tabindex="-1">Product API Reference <a class="header-anchor" href="#product-api-reference" aria-label="Permalink to &quot;Product API Reference&quot;">​</a></h1><h2 id="product-characteristics" tabindex="-1">Product characteristics <a class="header-anchor" href="#product-characteristics" aria-label="Permalink to &quot;Product characteristics&quot;">​</a></h2><p>Products can be configured with characteristics. Characteristics are defined outside of the product and can used during the configuration of different products.</p><ul><li><a href="./product-types.html">Product types</a></li><li><a href="./product-brands.html">Product brands</a></li></ul><h2 id="product-options" tabindex="-1">Product options <a class="header-anchor" href="#product-options" aria-label="Permalink to &quot;Product options&quot;">​</a></h2><p>Products can have options. Options are used to differenciate products having the same definition. For instance, a product <strong>color</strong> or a product <strong>size</strong> are options of the same base product. Options are defined outside of the product and can used during the configuration of different products.</p><ul><li><a href="./product-options.html">Product options</a></li></ul><h2 id="product-definition" tabindex="-1">Product definition <a class="header-anchor" href="#product-definition" aria-label="Permalink to &quot;Product definition&quot;">​</a></h2><p>Product definition is product metadata that defines core non variables elements of a product. For instance a <strong>t-shirt</strong> is a basic product definition. A product definition has no variants attached. It contains basic characteristiques, core attributes and dynamic attributes.</p><ul><li><a href="./product-definition.html">Product definition</a></li><li><a href="./product-images.html">Product images</a></li></ul><h2 id="product" tabindex="-1">Product <a class="header-anchor" href="#product" aria-label="Permalink to &quot;Product&quot;">​</a></h2><p>Product definition returns product summary usefull when working on a product management perspective. Product api returns complete object with composition rules and should be used when listing products or getting product details.</p><ul><li><a href="./product.html">Product</a></li></ul><h2 id="product-properties-attributes" tabindex="-1">Product properties (attributes) <a class="header-anchor" href="#product-properties-attributes" aria-label="Permalink to &quot;Product properties (attributes)&quot;">​</a></h2><p>Properties (attributes) adds extension to the product core attributes by allowing the creation of custom properties (attributes).</p><ul><li><a href="./product-properties.html">Product custom properties</a></li></ul><h2 id="product-variations-options" tabindex="-1">Product variations (options) <a class="header-anchor" href="#product-variations-options" aria-label="Permalink to &quot;Product variations (options)&quot;">​</a></h2><p>Variations of product definitions.</p><ul><li><a href="./product-variants.html">Product variations</a></li></ul><h2 id="product-variants" tabindex="-1">Product variants <a class="header-anchor" href="#product-variants" aria-label="Permalink to &quot;Product variants&quot;">​</a></h2><p>Product variants are product definitions with variations attached to it. A single product definition can have multiple product variants. Each product variant has its own sku.</p><ul><li><a href="./product-instances.html">Product variants</a></li><li><a href="./product-instances-group.html">Product variants group</a></li></ul><h2 id="product-classification" tabindex="-1">Product classification <a class="header-anchor" href="#product-classification" aria-label="Permalink to &quot;Product classification&quot;">​</a></h2><p>Products are classified in Category.</p><ul><li><a href="./product-category.html">Product category</a></li></ul><h2 id="list-products" tabindex="-1">List products <a class="header-anchor" href="#list-products" aria-label="Permalink to &quot;List products&quot;">​</a></h2><p>List products with pagination and filters for a specific Merchant Store and Language.</p><ul><li><a href="./product-listing.html">Product listing</a></li></ul><h2 id="search-products" tabindex="-1">Search products <a class="header-anchor" href="#search-products" aria-label="Permalink to &quot;Search products&quot;">​</a></h2><p>Full Text search and Auto complete keywords using Search server such as Elastic Search and Open Search</p><ul><li><a href="./product-search.html">Product search</a></li></ul><h2 id="swagger-documentations" tabindex="-1">Swagger documentations <a class="header-anchor" href="#swagger-documentations" aria-label="Permalink to &quot;Swagger documentations&quot;">​</a></h2><p>All apis are described on Swaggerhub Shopizer repository</p><p><a href="https://groups.google.com/forum/#!forum/shopizer" target="_blank" rel="noreferrer">Shopize Swagger Documentation</a><a href="https://app.swaggerhub.com/apis-docs/shopizer/shopizer-rest-api/3.0.1" target="_blank" rel="noreferrer">https://app.swaggerhub.com/apis-docs/shopizer/shopizer-rest-api/3.0.1</a></p>',34),c=[i];function s(n,d,u,p,h,l){return r(),a("div",null,c)}const P=t(o,[["render",s]]);export{m as __pageData,P as default};
